#include "GulgECS/ComponentSignatureKeeper.hpp"

namespace Gg {

std::map<Component::Type, Signature> ComponentSignatureKeeper::m_signatures{std::map<Component::Type, Signature>{}};   

Signature ComponentSignatureKeeper::getSignature(const Component::Type &componentTypeToGet) { return m_signatures.at(componentTypeToGet); }

//Don't modify the code between the two next commentaries, it will be auto-generated by the ListOfComponent program
//BEGIN - AUTOGENERATED
void ComponentSignatureKeeper::Init() {

	m_signatures.insert(std::make_pair(Component::Type::Drawable, Signature{std::array<bool, 5> { 1, 0, 0, 0, 0 }}));
	m_signatures.insert(std::make_pair(Component::Type::Hitbox2D, Signature{std::array<bool, 5> { 0, 1, 0, 0, 0 }}));
	m_signatures.insert(std::make_pair(Component::Type::Mass, Signature{std::array<bool, 5> { 0, 0, 1, 0, 0 }}));
	m_signatures.insert(std::make_pair(Component::Type::Orientation, Signature{std::array<bool, 5> { 0, 0, 0, 1, 0 }}));
	m_signatures.insert(std::make_pair(Component::Type::Position, Signature{std::array<bool, 5> { 0, 0, 0, 0, 1 }}));
}
//END - AUTOGENERATED

}
